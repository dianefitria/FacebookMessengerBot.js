{"version":3,"sources":["../src/Elements.js"],"names":["Elements","elements","_elements","_quickreplies","_listStyle","_buttons","text","image","subtext","url","buttons","Array","isArray","from","Error","push","quickreplies","listStyle","build","length","e","element","title","image_url","subtitle","item_url","toJSON","attachment","type","payload","template_type","top_element_style","built","quick_replies","array","forEach","add","arg"],"mappings":"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","file":"Elements.js","sourcesContent":["import Buttons from './Buttons';\r\nimport QuickReplies from './QuickReplies';\r\n\r\nclass Elements {\r\n  constructor(elements) {\r\n    this._elements = [];\r\n    this._quickreplies = null;\r\n    this._listStyle = null;\r\n    this._buttons = null;\r\n  }\r\n\r\n  add({\r\n    text,\r\n    image,\r\n    subtext,\r\n    url,\r\n    buttons\r\n  }) {\r\n    if (buttons) {\r\n      if (!(buttons instanceof Buttons)) {\r\n        if (Array.isArray(buttons)) {\r\n          buttons = Buttons.from(buttons);\r\n        } else {\r\n          throw Error('Unable to parse buttons');\r\n        }\r\n      }\r\n    }\r\n\r\n    this._elements.push({\r\n      text,\r\n      image,\r\n      subtext,\r\n      url,\r\n      buttons\r\n    });\r\n    return this;\r\n  }\r\n\r\n  setQuickReplies(quickreplies) {\r\n    if (quickreplies) {\r\n      if (!(quickreplies instanceof QuickReplies)) {\r\n        if (Array.isArray(quickreplies)) {\r\n          quickreplies = QuickReplies.from(quickreplies);\r\n        } else {\r\n          throw Error('Unable to parse quickreplies');\r\n        }\r\n      }\r\n    }\r\n\r\n    this._quickreplies = quickreplies;\r\n    return this;\r\n  }\r\n\r\n  setListStyle(listStyle, buttons) {\r\n    if (listStyle === 'large' || listStyle === 'compact') {\r\n      this._listStyle = listStyle;\r\n    } else {\r\n      throw Error('Valid values for list styles are \"large\" or \"compact\"');\r\n    }\r\n\r\n    if (buttons) {\r\n      if (!(buttons instanceof Buttons)) {\r\n        if (Array.isArray(buttons)) {\r\n          this._buttons = Buttons.from(buttons);\r\n        } else {\r\n          throw Error('Unable to parse buttons');\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  getQuickReplies() {\r\n    return this._quickreplies;\r\n  }\r\n\r\n  get length() {\r\n    return this._elements.length;\r\n  }\r\n\r\n  toJSON() {\r\n    const build = () => {\r\n      if (this._elements.length > 1) {\r\n        const elements = [];\r\n        for (const e of this._elements) {\r\n          const element = {};\r\n          if (e.text) element.title = e.text;\r\n          if (e.image) element.image_url = e.image;\r\n          if (e.subtext) element.subtitle = e.subtext;\r\n          if (e.url) element.item_url = e.url;\r\n          if (e.buttons && e.buttons.length) element.buttons = e.buttons.toJSON();\r\n          elements.push(element);\r\n        }\r\n\r\n        let buttons;\r\n        if (this._buttons && this._buttons.length) {\r\n          buttons = this._buttons.toJSON();\r\n        }\r\n\r\n        if (this._listStyle) {\r\n          return {\r\n            attachment: {\r\n              type: 'template',\r\n              payload: {\r\n                template_type: 'list',\r\n                top_element_style: this._listStyle,\r\n                elements,\r\n                buttons\r\n              }\r\n            }\r\n          };\r\n        } else if (!this._listStyle) {\r\n          return {\r\n            attachment: {\r\n              type: 'template',\r\n              payload: {\r\n                template_type: 'generic',\r\n                elements\r\n              }\r\n            }\r\n          };\r\n        }\r\n      } else if (this._elements.length === 1) {\r\n        const e = this._elements[0];\r\n        const element = {};\r\n        if (e.text && e.buttons && e.buttons.length && (e.image || e.subtext)) {\r\n          element.title = e.text;\r\n          if (e.image) element.image_url = e.image;\r\n          if (e.subtext) element.subtitle = e.subtext;\r\n          element.buttons = e.buttons.toJSON();\r\n          return {\r\n            attachment: {\r\n              type: 'template',\r\n              payload: {\r\n                template_type: 'generic',\r\n                elements: [element]\r\n              }\r\n            }\r\n          };\r\n        } else if (e.text && e.buttons && e.buttons.length) {\r\n          element.text = e.text;\r\n          if (e.image) element.image_url = e.image;\r\n          element.buttons = e.buttons.toJSON();\r\n          return {\r\n            attachment: {\r\n              type: 'template',\r\n              payload: {\r\n                template_type: 'button',\r\n                ...element\r\n              }\r\n            }\r\n          };\r\n        } else if (e.text) {\r\n          return {\r\n            text: e.text\r\n          };\r\n        } else if (e.image) {\r\n          return {\r\n            attachment: {\r\n              type: 'image',\r\n              payload: {\r\n                url: e.image\r\n              }\r\n            }\r\n          };\r\n        }\r\n      }\r\n\r\n      throw Error('Could not form a message. Have you followed the format?');\r\n    };\r\n\r\n    const built = build();\r\n\r\n    if (this._quickreplies && this._quickreplies.length) {\r\n      built.quick_replies = this._quickreplies.toJSON();\r\n    }\r\n\r\n    return built;\r\n  }\r\n\r\n  static from(array) {\r\n    const element = new Elements();\r\n    if (Array.isArray(array)) {\r\n      array.forEach(arg => element.add(arg));\r\n    } else {\r\n      element.add(array);\r\n    }\r\n    return element;\r\n  }\r\n}\r\n\r\nexport default Elements;"]}