{"version":3,"sources":["../src/Elements.js"],"names":["Elements","elements","_elements","_quickreplies","_listStyle","_buttons","_imageAspectRatio","Array","isArray","forEach","add","element","text","image","video","subtext","url","buttons","options","Buttons","from","Error","push","quickreplies","QuickReplies","listStyle","imageAspectRatio","build","length","e","title","image_url","subtitle","item_url","toJSON","attachment","type","payload","template_type","top_element_style","image_aspect_ratio","built","quick_replies","array","arg"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEMA,Q;AACJ,oBAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AACpB,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,aAAL,GAAqB,IAArB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKC,iBAAL,GAAyB,YAAzB;;AAEA,QAAIL,YAAY,IAAhB,EAAsB;AACpB,UAAIM,MAAMC,OAAN,CAAcP,QAAd,CAAJ,EAA6B;AAC3BA,iBAASQ,OAAT,CAAiB;AAAA,iBAAW,MAAKC,GAAL,CAASC,OAAT,CAAX;AAAA,SAAjB;AACD,OAFD,MAEO;AACL,aAAKD,GAAL,CAAST,QAAT;AACD;AACF;AACF;;;;8BAE2D;AAAA,UAAtDW,IAAsD,QAAtDA,IAAsD;AAAA,UAAhDC,KAAgD,QAAhDA,KAAgD;AAAA,UAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,UAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,UAAzBC,GAAyB,QAAzBA,GAAyB;AAAA,UAApBC,OAAoB,QAApBA,OAAoB;AAAA,UAAXC,OAAW,QAAXA,OAAW;;AAC1D,UAAID,OAAJ,EAAa;AACX,YAAI,EAAEA,mBAAmBE,iBAArB,CAAJ,EAAmC;AACjC,cAAIZ,MAAMC,OAAN,CAAcS,OAAd,CAAJ,EAA4B;AAC1BA,sBAAUE,kBAAQC,IAAR,CAAaH,OAAb,CAAV;AACD,WAFD,MAEO;AACL,kBAAMI,MAAM,yBAAN,CAAN;AACD;AACF;AACF;;AAED,WAAKnB,SAAL,CAAeoB,IAAf,CAAoB;AAClBV,kBADkB;AAElBC,oBAFkB;AAGlBC,oBAHkB;AAIlBC,wBAJkB;AAKlBC,gBALkB;AAMlBC,wBANkB;AAOlBC;AAPkB,OAApB;AASA,aAAO,IAAP;AACD;;;oCAEeK,Y,EAAc;AAC5B,UAAIA,YAAJ,EAAkB;AAChB,YAAI,EAAEA,wBAAwBC,sBAA1B,CAAJ,EAA6C;AAC3C,cAAIjB,MAAMC,OAAN,CAAce,YAAd,CAAJ,EAAiC;AAC/BA,2BAAeC,uBAAaJ,IAAb,CAAkBG,YAAlB,CAAf;AACD,WAFD,MAEO;AACL,kBAAMF,MAAM,8BAAN,CAAN;AACD;AACF;AACF;;AAED,WAAKlB,aAAL,GAAqBoB,YAArB;AACA,aAAO,IAAP;AACD;;;iCAEYE,S,EAAWR,O,EAAS;AAC/B,UAAIQ,cAAc,OAAd,IAAyBA,cAAc,SAA3C,EAAsD;AACpD,aAAKrB,UAAL,GAAkBqB,SAAlB;AACD,OAFD,MAEO;AACL,cAAMJ,MAAM,uDAAN,CAAN;AACD;;AAED,UAAIJ,OAAJ,EAAa;AACX,YAAI,EAAEA,mBAAmBE,iBAArB,CAAJ,EAAmC;AACjC,cAAIZ,MAAMC,OAAN,CAAcS,OAAd,CAAJ,EAA4B;AAC1B,iBAAKZ,QAAL,GAAgBc,kBAAQC,IAAR,CAAaH,OAAb,CAAhB;AACD,WAFD,MAEO;AACL,kBAAMI,MAAM,yBAAN,CAAN;AACD;AACF;AACF;AACD,aAAO,IAAP;AACD;;;wCAEmBK,gB,EAAkB;AACpC,WAAKpB,iBAAL,GAAyBoB,gBAAzB;AACD;;;sCAEiB;AAChB,aAAO,KAAKvB,aAAZ;AACD;;;6BAMQ;AAAA;;AACP,UAAMwB,QAAQ,SAARA,KAAQ,GAAM;AAClB,YAAI,OAAKzB,SAAL,CAAe0B,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,cAAM3B,WAAW,EAAjB;AAD6B;AAAA;AAAA;;AAAA;AAE7B,4DAAgB,OAAKC,SAArB,4GAAgC;AAAA,kBAArB2B,CAAqB;;AAC9B,kBAAMlB,UAAU,EAAhB;AACA,kBAAIkB,EAAEjB,IAAN,EAAYD,QAAQmB,KAAR,GAAgBD,EAAEjB,IAAlB;AACZ,kBAAIiB,EAAEhB,KAAN,EAAaF,QAAQoB,SAAR,GAAoBF,EAAEhB,KAAtB;AACb,kBAAIgB,EAAEd,OAAN,EAAeJ,QAAQqB,QAAR,GAAmBH,EAAEd,OAArB;AACf,kBAAIc,EAAEb,GAAN,EAAWL,QAAQsB,QAAR,GAAmBJ,EAAEb,GAArB;AACX,kBAAIa,EAAEZ,OAAF,IAAaY,EAAEZ,OAAF,CAAUW,MAA3B,EACEjB,QAAQM,OAAR,GAAkBY,EAAEZ,OAAF,CAAUiB,MAAV,EAAlB;AACFjC,uBAASqB,IAAT,CAAcX,OAAd;AACD;AAX4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAa7B,cAAIM,gBAAJ;AACA,cAAI,OAAKZ,QAAL,IAAiB,OAAKA,QAAL,CAAcuB,MAAnC,EAA2C;AACzCX,sBAAU,OAAKZ,QAAL,CAAc6B,MAAd,EAAV;AACD;;AAED,cAAI,OAAK9B,UAAT,EAAqB;AACnB,mBAAO;AACL+B,0BAAY;AACVC,sBAAM,UADI;AAEVC,yBAAS;AACPC,iCAAe,MADR;AAEPC,qCAAmB,OAAKnC,UAFjB;AAGPH,oCAHO;AAIPgB;AAJO;AAFC;AADP,aAAP;AAWD,WAZD,MAYO,IAAI,CAAC,OAAKb,UAAV,EAAsB;AAC3B,mBAAO;AACL+B,0BAAY;AACVC,sBAAM,UADI;AAEVC,yBAAS;AACPC,iCAAe,SADR;AAEPrC,oCAFO;AAGPuC,sCAAoB,OAAKlC;AAHlB;AAFC;AADP,aAAP;AAUD;AACF,SA1CD,MA0CO,IAAI,OAAKJ,SAAL,CAAe0B,MAAf,KAA0B,CAA9B,EAAiC;AACtC,cAAMC,KAAI,OAAK3B,SAAL,CAAe,CAAf,CAAV;AACA,cAAMS,WAAU,EAAhB;AACA,cAAIkB,GAAEjB,IAAF,KAAWiB,GAAEb,GAAF,IAASa,GAAEhB,KAAX,IAAoBgB,GAAEd,OAAjC,CAAJ,EAA+C;AAC7C,gBAAIc,GAAEjB,IAAN,EAAYD,SAAQmB,KAAR,GAAgBD,GAAEjB,IAAlB;AACZ,gBAAIiB,GAAEhB,KAAN,EAAaF,SAAQoB,SAAR,GAAoBF,GAAEhB,KAAtB;AACb,gBAAIgB,GAAEd,OAAN,EAAeJ,SAAQqB,QAAR,GAAmBH,GAAEd,OAArB;AACf,gBAAIc,GAAEb,GAAN,EAAWL,SAAQsB,QAAR,GAAmBJ,GAAEb,GAArB;AACX,gBAAIa,GAAEZ,OAAF,IAAaY,GAAEZ,OAAF,CAAUW,MAA3B,EACEjB,SAAQM,OAAR,GAAkBY,GAAEZ,OAAF,CAAUiB,MAAV,EAAlB;;AAEF,mBAAO;AACLC,0BAAY;AACVC,sBAAM,UADI;AAEVC,yBAAS;AACPC,iCAAe,SADR;AAEPrC,4BAAU,CAACU,QAAD,CAFH;AAGP6B,sCAAoB,OAAKlC;AAHlB;AAFC;AADP,aAAP;AAUD,WAlBD,MAkBO,IAAIuB,GAAEjB,IAAF,IAAUiB,GAAEZ,OAAZ,IAAuBY,GAAEZ,OAAF,CAAUW,MAArC,EAA6C;AAClDjB,qBAAQC,IAAR,GAAeiB,GAAEjB,IAAjB;AACA,gBAAIiB,GAAEhB,KAAN,EAAaF,SAAQoB,SAAR,GAAoBF,GAAEhB,KAAtB;AACbF,qBAAQM,OAAR,GAAkBY,GAAEZ,OAAF,CAAUiB,MAAV,EAAlB;AACA,mBAAO;AACLC,0BAAY;AACVC,sBAAM,UADI;AAEVC;AACEC,iCAAe;AADjB,mBAEK3B,QAFL;AAFU;AADP,aAAP;AASD,WAbM,MAaA,IAAIkB,GAAEjB,IAAN,EAAY;AACjB,mBAAO;AACLA,oBAAMiB,GAAEjB;AADH,aAAP;AAGD,WAJM,MAIA,IAAIiB,GAAEhB,KAAN,EAAa;AAClB,mBAAO;AACLsB,0BAAY;AACVC,sBAAM,OADI;AAEVC,yBAAS;AACPrB,uBAAKa,GAAEhB;AADA;AAFC;AADP,aAAP;AAQD,WATM,MASA,IAAIgB,GAAEf,KAAN,EAAa;AAClB,mBAAO;AACLqB,0BAAY;AACVC,sBAAM,OADI;AAEVC,yBAAS;AACPrB,uBAAKa,GAAEf;AADA;AAFC;AADP,aAAP;AAQD;AACF;;AAED,cAAMO,MAAM,yDAAN,CAAN;AACD,OAvGD;;AAyGA,UAAMoB,QAAQd,OAAd;;AAEA,UAAI,KAAKxB,aAAL,IAAsB,KAAKA,aAAL,CAAmByB,MAA7C,EAAqD;AACnDa,cAAMC,aAAN,GAAsB,KAAKvC,aAAL,CAAmB+B,MAAnB,EAAtB;AACD;;AAED,aAAOO,KAAP;AACD;;;wBArHY;AACX,aAAO,KAAKvC,SAAL,CAAe0B,MAAtB;AACD;;;yBAqHWe,K,EAAO;AACjB,UAAMhC,UAAU,IAAIX,QAAJ,EAAhB;AACA,UAAIO,MAAMC,OAAN,CAAcmC,KAAd,CAAJ,EAA0B;AACxBA,cAAMlC,OAAN,CAAc;AAAA,iBAAOE,QAAQD,GAAR,CAAYkC,GAAZ,CAAP;AAAA,SAAd;AACD,OAFD,MAEO;AACLjC,gBAAQD,GAAR,CAAYiC,KAAZ;AACD;AACD,aAAOhC,OAAP;AACD;;;;;kBAGYX,Q","file":"Elements.js","sourcesContent":["import Buttons from \"./Buttons\";\nimport QuickReplies from \"./QuickReplies\";\n\nclass Elements {\n  constructor(elements) {\n    this._elements = [];\n    this._quickreplies = null;\n    this._listStyle = null;\n    this._buttons = null;\n    this._imageAspectRatio = \"horizontal\";\n\n    if (elements != null) {\n      if (Array.isArray(elements)) {\n        elements.forEach(element => this.add(element));\n      } else {\n        this.add(elements);\n      }\n    }\n  }\n\n  add({ text, image, video, subtext, url, buttons, options }) {\n    if (buttons) {\n      if (!(buttons instanceof Buttons)) {\n        if (Array.isArray(buttons)) {\n          buttons = Buttons.from(buttons);\n        } else {\n          throw Error(\"Unable to parse buttons\");\n        }\n      }\n    }\n\n    this._elements.push({\n      text,\n      image,\n      video,\n      subtext,\n      url,\n      buttons,\n      options\n    });\n    return this;\n  }\n\n  setQuickReplies(quickreplies) {\n    if (quickreplies) {\n      if (!(quickreplies instanceof QuickReplies)) {\n        if (Array.isArray(quickreplies)) {\n          quickreplies = QuickReplies.from(quickreplies);\n        } else {\n          throw Error(\"Unable to parse quickreplies\");\n        }\n      }\n    }\n\n    this._quickreplies = quickreplies;\n    return this;\n  }\n\n  setListStyle(listStyle, buttons) {\n    if (listStyle === \"large\" || listStyle === \"compact\") {\n      this._listStyle = listStyle;\n    } else {\n      throw Error('Valid values for list styles are \"large\" or \"compact\"');\n    }\n\n    if (buttons) {\n      if (!(buttons instanceof Buttons)) {\n        if (Array.isArray(buttons)) {\n          this._buttons = Buttons.from(buttons);\n        } else {\n          throw Error(\"Unable to parse buttons\");\n        }\n      }\n    }\n    return this;\n  }\n\n  setImageAspectRatio(imageAspectRatio) {\n    this._imageAspectRatio = imageAspectRatio;\n  }\n\n  getQuickReplies() {\n    return this._quickreplies;\n  }\n\n  get length() {\n    return this._elements.length;\n  }\n\n  toJSON() {\n    const build = () => {\n      if (this._elements.length > 1) {\n        const elements = [];\n        for (const e of this._elements) {\n          const element = {};\n          if (e.text) element.title = e.text;\n          if (e.image) element.image_url = e.image;\n          if (e.subtext) element.subtitle = e.subtext;\n          if (e.url) element.item_url = e.url;\n          if (e.buttons && e.buttons.length)\n            element.buttons = e.buttons.toJSON();\n          elements.push(element);\n        }\n\n        let buttons;\n        if (this._buttons && this._buttons.length) {\n          buttons = this._buttons.toJSON();\n        }\n\n        if (this._listStyle) {\n          return {\n            attachment: {\n              type: \"template\",\n              payload: {\n                template_type: \"list\",\n                top_element_style: this._listStyle,\n                elements,\n                buttons\n              }\n            }\n          };\n        } else if (!this._listStyle) {\n          return {\n            attachment: {\n              type: \"template\",\n              payload: {\n                template_type: \"generic\",\n                elements,\n                image_aspect_ratio: this._imageAspectRatio\n              }\n            }\n          };\n        }\n      } else if (this._elements.length === 1) {\n        const e = this._elements[0];\n        const element = {};\n        if (e.text && (e.url || e.image || e.subtext)) {\n          if (e.text) element.title = e.text;\n          if (e.image) element.image_url = e.image;\n          if (e.subtext) element.subtitle = e.subtext;\n          if (e.url) element.item_url = e.url;\n          if (e.buttons && e.buttons.length)\n            element.buttons = e.buttons.toJSON();\n\n          return {\n            attachment: {\n              type: \"template\",\n              payload: {\n                template_type: \"generic\",\n                elements: [element],\n                image_aspect_ratio: this._imageAspectRatio\n              }\n            }\n          };\n        } else if (e.text && e.buttons && e.buttons.length) {\n          element.text = e.text;\n          if (e.image) element.image_url = e.image;\n          element.buttons = e.buttons.toJSON();\n          return {\n            attachment: {\n              type: \"template\",\n              payload: {\n                template_type: \"button\",\n                ...element\n              }\n            }\n          };\n        } else if (e.text) {\n          return {\n            text: e.text\n          };\n        } else if (e.image) {\n          return {\n            attachment: {\n              type: \"image\",\n              payload: {\n                url: e.image\n              }\n            }\n          };\n        } else if (e.video) {\n          return {\n            attachment: {\n              type: \"video\",\n              payload: {\n                url: e.video\n              }\n            }\n          };\n        }\n      }\n\n      throw Error(\"Could not form a message. Have you followed the format?\");\n    };\n\n    const built = build();\n\n    if (this._quickreplies && this._quickreplies.length) {\n      built.quick_replies = this._quickreplies.toJSON();\n    }\n\n    return built;\n  }\n\n  static from(array) {\n    const element = new Elements();\n    if (Array.isArray(array)) {\n      array.forEach(arg => element.add(arg));\n    } else {\n      element.add(array);\n    }\n    return element;\n  }\n}\n\nexport default Elements;\n"]}