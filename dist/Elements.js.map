{"version":3,"sources":["../src/Elements.js"],"names":["Elements","elements","_elements","_quickreplies","_listStyle","_buttons","Array","isArray","forEach","add","element","text","image","subtext","url","buttons","from","Error","push","quickreplies","listStyle","build","length","e","title","image_url","subtitle","item_url","toJSON","attachment","type","payload","template_type","top_element_style","built","quick_replies","array","arg"],"mappings":"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","file":"Elements.js","sourcesContent":["import Buttons from './Buttons';\nimport QuickReplies from './QuickReplies';\n\nclass Elements {\n  constructor(elements) {\n    this._elements = [];\n    this._quickreplies = null;\n    this._listStyle = null;\n    this._buttons = null;\n\n    if (elements != null) {\n      if (Array.isArray(elements)) {\n        elements.forEach(element => this.add(element));\n      } else {\n        this.add(elements);\n      }\n    }\n  }\n\n  add({\n    text,\n    image,\n    subtext,\n    url,\n    buttons\n  }) {\n    if (buttons) {\n      if (!(buttons instanceof Buttons)) {\n        if (Array.isArray(buttons)) {\n          buttons = Buttons.from(buttons);\n        } else {\n          throw Error('Unable to parse buttons');\n        }\n      }\n    }\n\n    this._elements.push({\n      text,\n      image,\n      subtext,\n      url,\n      buttons\n    });\n    return this;\n  }\n\n  setQuickReplies(quickreplies) {\n    if (quickreplies) {\n      if (!(quickreplies instanceof QuickReplies)) {\n        if (Array.isArray(quickreplies)) {\n          quickreplies = QuickReplies.from(quickreplies);\n        } else {\n          throw Error('Unable to parse quickreplies');\n        }\n      }\n    }\n\n    this._quickreplies = quickreplies;\n    return this;\n  }\n\n  setListStyle(listStyle, buttons) {\n    if (listStyle === 'large' || listStyle === 'compact') {\n      this._listStyle = listStyle;\n    } else {\n      throw Error('Valid values for list styles are \"large\" or \"compact\"');\n    }\n\n    if (buttons) {\n      if (!(buttons instanceof Buttons)) {\n        if (Array.isArray(buttons)) {\n          this._buttons = Buttons.from(buttons);\n        } else {\n          throw Error('Unable to parse buttons');\n        }\n      }\n    }\n    return this;\n  }\n\n  getQuickReplies() {\n    return this._quickreplies;\n  }\n\n  get length() {\n    return this._elements.length;\n  }\n\n  toJSON() {\n    const build = () => {\n      if (this._elements.length > 1) {\n        const elements = [];\n        for (const e of this._elements) {\n          const element = {};\n          if (e.text) element.title = e.text;\n          if (e.image) element.image_url = e.image;\n          if (e.subtext) element.subtitle = e.subtext;\n          if (e.url) element.item_url = e.url;\n          if (e.buttons && e.buttons.length) element.buttons = e.buttons.toJSON();\n          elements.push(element);\n        }\n\n        let buttons;\n        if (this._buttons && this._buttons.length) {\n          buttons = this._buttons.toJSON();\n        }\n\n        if (this._listStyle) {\n          return {\n            attachment: {\n              type: 'template',\n              payload: {\n                template_type: 'list',\n                top_element_style: this._listStyle,\n                elements,\n                buttons\n              }\n            }\n          };\n        } else if (!this._listStyle) {\n          return {\n            attachment: {\n              type: 'template',\n              payload: {\n                template_type: 'generic',\n                elements\n              }\n            }\n          };\n        }\n      } else if (this._elements.length === 1) {\n        const e = this._elements[0];\n        const element = {};\n        if (e.text && (e.url || e.image || e.subtext)) {\n          if (e.text) element.title = e.text;\n          if (e.image) element.image_url = e.image;\n          if (e.subtext) element.subtitle = e.subtext;\n          if (e.url) element.item_url = e.url;\n          if (e.buttons && e.buttons.length) element.buttons = e.buttons.toJSON();\n\n          return {\n            attachment: {\n              type: 'template',\n              payload: {\n                template_type: 'generic',\n                elements: [element]\n              }\n            }\n          };\n        } else if (e.text && e.buttons && e.buttons.length) {\n          element.text = e.text;\n          if (e.image) element.image_url = e.image;\n          element.buttons = e.buttons.toJSON();\n          return {\n            attachment: {\n              type: 'template',\n              payload: {\n                template_type: 'button',\n                ...element\n              }\n            }\n          };\n        } else if (e.text) {\n          return {\n            text: e.text\n          };\n        } else if (e.image) {\n          return {\n            attachment: {\n              type: 'image',\n              payload: {\n                url: e.image\n              }\n            }\n          };\n        }\n      }\n\n      throw Error('Could not form a message. Have you followed the format?');\n    };\n\n    const built = build();\n\n    if (this._quickreplies && this._quickreplies.length) {\n      built.quick_replies = this._quickreplies.toJSON();\n    }\n\n    return built;\n  }\n\n  static from(array) {\n    const element = new Elements();\n    if (Array.isArray(array)) {\n      array.forEach(arg => element.add(arg));\n    } else {\n      element.add(array);\n    }\n    return element;\n  }\n}\n\nexport default Elements;"]}