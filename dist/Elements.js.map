{"version":3,"sources":["../src/Elements.js"],"names":["Elements","elements","_elements","_quickreplies","_listStyle","_buttons","Array","isArray","forEach","add","element","text","image","video","subtext","url","buttons","options","from","Error","push","quickreplies","listStyle","build","length","e","title","image_url","subtitle","item_url","toJSON","attachment","type","payload","template_type","top_element_style","built","quick_replies","array","arg"],"mappings":"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","file":"Elements.js","sourcesContent":["import Buttons from \"./Buttons\";\r\nimport QuickReplies from \"./QuickReplies\";\r\n\r\nclass Elements {\r\n  constructor(elements) {\r\n    this._elements = [];\r\n    this._quickreplies = null;\r\n    this._listStyle = null;\r\n    this._buttons = null;\r\n\r\n    if (elements != null) {\r\n      if (Array.isArray(elements)) {\r\n        elements.forEach(element => this.add(element));\r\n      } else {\r\n        this.add(elements);\r\n      }\r\n    }\r\n  }\r\n\r\n  add({ text, image, video, subtext, url, buttons, options }) {\r\n    if (buttons) {\r\n      if (!(buttons instanceof Buttons)) {\r\n        if (Array.isArray(buttons)) {\r\n          buttons = Buttons.from(buttons);\r\n        } else {\r\n          throw Error(\"Unable to parse buttons\");\r\n        }\r\n      }\r\n    }\r\n\r\n    this._elements.push({\r\n      text,\r\n      image,\r\n      video,\r\n      subtext,\r\n      url,\r\n      buttons,\r\n      options\r\n    });\r\n    return this;\r\n  }\r\n\r\n  setQuickReplies(quickreplies) {\r\n    if (quickreplies) {\r\n      if (!(quickreplies instanceof QuickReplies)) {\r\n        if (Array.isArray(quickreplies)) {\r\n          quickreplies = QuickReplies.from(quickreplies);\r\n        } else {\r\n          throw Error(\"Unable to parse quickreplies\");\r\n        }\r\n      }\r\n    }\r\n\r\n    this._quickreplies = quickreplies;\r\n    return this;\r\n  }\r\n\r\n  setListStyle(listStyle, buttons) {\r\n    if (listStyle === \"large\" || listStyle === \"compact\") {\r\n      this._listStyle = listStyle;\r\n    } else {\r\n      throw Error('Valid values for list styles are \"large\" or \"compact\"');\r\n    }\r\n\r\n    if (buttons) {\r\n      if (!(buttons instanceof Buttons)) {\r\n        if (Array.isArray(buttons)) {\r\n          this._buttons = Buttons.from(buttons);\r\n        } else {\r\n          throw Error(\"Unable to parse buttons\");\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  getQuickReplies() {\r\n    return this._quickreplies;\r\n  }\r\n\r\n  get length() {\r\n    return this._elements.length;\r\n  }\r\n\r\n  toJSON() {\r\n    const build = () => {\r\n      if (this._elements.length > 1) {\r\n        const elements = [];\r\n        for (const e of this._elements) {\r\n          const element = {};\r\n          if (e.text) element.title = e.text;\r\n          if (e.image) element.image_url = e.image;\r\n          if (e.subtext) element.subtitle = e.subtext;\r\n          if (e.url) element.item_url = e.url;\r\n          if (e.buttons && e.buttons.length)\r\n            element.buttons = e.buttons.toJSON();\r\n          elements.push(element);\r\n        }\r\n\r\n        let buttons;\r\n        if (this._buttons && this._buttons.length) {\r\n          buttons = this._buttons.toJSON();\r\n        }\r\n\r\n        if (this._listStyle) {\r\n          return {\r\n            attachment: {\r\n              type: \"template\",\r\n              payload: {\r\n                template_type: \"list\",\r\n                top_element_style: this._listStyle,\r\n                elements,\r\n                buttons\r\n              }\r\n            }\r\n          };\r\n        } else if (!this._listStyle) {\r\n          return {\r\n            attachment: {\r\n              type: \"template\",\r\n              payload: {\r\n                template_type: \"generic\",\r\n                elements\r\n              }\r\n            }\r\n          };\r\n        }\r\n      } else if (this._elements.length === 1) {\r\n        const e = this._elements[0];\r\n        const element = {};\r\n        if (e.text && (e.url || e.image || e.subtext)) {\r\n          if (e.text) element.title = e.text;\r\n          if (e.image) element.image_url = e.image;\r\n          if (e.subtext) element.subtitle = e.subtext;\r\n          if (e.url) element.item_url = e.url;\r\n          if (e.buttons && e.buttons.length)\r\n            element.buttons = e.buttons.toJSON();\r\n\r\n          return {\r\n            attachment: {\r\n              type: \"template\",\r\n              payload: {\r\n                template_type: \"generic\",\r\n                elements: [element]\r\n              }\r\n            }\r\n          };\r\n        } else if (e.text && e.buttons && e.buttons.length) {\r\n          element.text = e.text;\r\n          if (e.image) element.image_url = e.image;\r\n          element.buttons = e.buttons.toJSON();\r\n          return {\r\n            attachment: {\r\n              type: \"template\",\r\n              payload: {\r\n                template_type: \"button\",\r\n                ...element\r\n              }\r\n            }\r\n          };\r\n        } else if (e.text) {\r\n          return {\r\n            text: e.text\r\n          };\r\n        } else if (e.image) {\r\n          return {\r\n            attachment: {\r\n              type: \"image\",\r\n              payload: {\r\n                url: e.image\r\n              }\r\n            }\r\n          };\r\n        } else if (e.video) {\r\n          return {\r\n            attachment: {\r\n              type: \"video\",\r\n              payload: {\r\n                url: e.video\r\n              }\r\n            }\r\n          };\r\n        }\r\n      }\r\n\r\n      throw Error(\"Could not form a message. Have you followed the format?\");\r\n    };\r\n\r\n    const built = build();\r\n\r\n    if (this._quickreplies && this._quickreplies.length) {\r\n      built.quick_replies = this._quickreplies.toJSON();\r\n    }\r\n\r\n    return built;\r\n  }\r\n\r\n  static from(array) {\r\n    const element = new Elements();\r\n    if (Array.isArray(array)) {\r\n      array.forEach(arg => element.add(arg));\r\n    } else {\r\n      element.add(array);\r\n    }\r\n    return element;\r\n  }\r\n}\r\n\r\nexport default Elements;\r\n"]}