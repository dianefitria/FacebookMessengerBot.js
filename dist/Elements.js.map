{"version":3,"sources":["../src/Elements.js"],"names":["Elements","elements","_elements","_quickreplies","_listStyle","_buttons","Array","isArray","forEach","add","element","text","image","video","subtext","url","buttons","from","Error","push","quickreplies","listStyle","build","length","e","title","image_url","subtitle","item_url","toJSON","attachment","type","payload","template_type","top_element_style","built","quick_replies","array","arg"],"mappings":"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","file":"Elements.js","sourcesContent":["import Buttons from './Buttons';\r\nimport QuickReplies from './QuickReplies';\r\n\r\nclass Elements {\r\n  constructor(elements) {\r\n    this._elements = [];\r\n    this._quickreplies = null;\r\n    this._listStyle = null;\r\n    this._buttons = null;\r\n\r\n    if (elements != null) {\r\n      if (Array.isArray(elements)) {\r\n        elements.forEach(element => this.add(element));\r\n      } else {\r\n        this.add(elements);\r\n      }\r\n    }\r\n  }\r\n\r\n  add({\r\n    text,\r\n    image,\r\n    video,\r\n    subtext,\r\n    url,\r\n    buttons\r\n  }) {\r\n    if (buttons) {\r\n      if (!(buttons instanceof Buttons)) {\r\n        if (Array.isArray(buttons)) {\r\n          buttons = Buttons.from(buttons);\r\n        } else {\r\n          throw Error('Unable to parse buttons');\r\n        }\r\n      }\r\n    }\r\n\r\n    this._elements.push({\r\n      text,\r\n      image,\r\n      video,\r\n      subtext,\r\n      url,\r\n      buttons\r\n    });\r\n    return this;\r\n  }\r\n\r\n  setQuickReplies(quickreplies) {\r\n    if (quickreplies) {\r\n      if (!(quickreplies instanceof QuickReplies)) {\r\n        if (Array.isArray(quickreplies)) {\r\n          quickreplies = QuickReplies.from(quickreplies);\r\n        } else {\r\n          throw Error('Unable to parse quickreplies');\r\n        }\r\n      }\r\n    }\r\n\r\n    this._quickreplies = quickreplies;\r\n    return this;\r\n  }\r\n\r\n  setListStyle(listStyle, buttons) {\r\n    if (listStyle === 'large' || listStyle === 'compact') {\r\n      this._listStyle = listStyle;\r\n    } else {\r\n      throw Error('Valid values for list styles are \"large\" or \"compact\"');\r\n    }\r\n\r\n    if (buttons) {\r\n      if (!(buttons instanceof Buttons)) {\r\n        if (Array.isArray(buttons)) {\r\n          this._buttons = Buttons.from(buttons);\r\n        } else {\r\n          throw Error('Unable to parse buttons');\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  getQuickReplies() {\r\n    return this._quickreplies;\r\n  }\r\n\r\n  get length() {\r\n    return this._elements.length;\r\n  }\r\n\r\n  toJSON() {\r\n    const build = () => {\r\n      if (this._elements.length > 1) {\r\n        const elements = [];\r\n        for (const e of this._elements) {\r\n          const element = {};\r\n          if (e.text) element.title = e.text;\r\n          if (e.image) element.image_url = e.image;\r\n          if (e.subtext) element.subtitle = e.subtext;\r\n          if (e.url) element.item_url = e.url;\r\n          if (e.buttons && e.buttons.length) element.buttons = e.buttons.toJSON();\r\n          elements.push(element);\r\n        }\r\n\r\n        let buttons;\r\n        if (this._buttons && this._buttons.length) {\r\n          buttons = this._buttons.toJSON();\r\n        }\r\n\r\n        if (this._listStyle) {\r\n          return {\r\n            attachment: {\r\n              type: 'template',\r\n              payload: {\r\n                template_type: 'list',\r\n                top_element_style: this._listStyle,\r\n                elements,\r\n                buttons\r\n              }\r\n            }\r\n          };\r\n        } else if (!this._listStyle) {\r\n          return {\r\n            attachment: {\r\n              type: 'template',\r\n              payload: {\r\n                template_type: 'generic',\r\n                elements\r\n              }\r\n            }\r\n          };\r\n        }\r\n      } else if (this._elements.length === 1) {\r\n        const e = this._elements[0];\r\n        const element = {};\r\n        if (e.text && (e.url || e.image || e.subtext)) {\r\n          if (e.text) element.title = e.text;\r\n          if (e.image) element.image_url = e.image;\r\n          if (e.subtext) element.subtitle = e.subtext;\r\n          if (e.url) element.item_url = e.url;\r\n          if (e.buttons && e.buttons.length) element.buttons = e.buttons.toJSON();\r\n\r\n          return {\r\n            attachment: {\r\n              type: 'template',\r\n              payload: {\r\n                template_type: 'generic',\r\n                elements: [element]\r\n              }\r\n            }\r\n          };\r\n        } else if (e.text && e.buttons && e.buttons.length) {\r\n          element.text = e.text;\r\n          if (e.image) element.image_url = e.image;\r\n          element.buttons = e.buttons.toJSON();\r\n          return {\r\n            attachment: {\r\n              type: 'template',\r\n              payload: {\r\n                template_type: 'button',\r\n                ...element\r\n              }\r\n            }\r\n          };\r\n        } else if (e.text) {\r\n          return {\r\n            text: e.text\r\n          };\r\n        } else if (e.image) {\r\n          return {\r\n            attachment: {\r\n              type: 'image',\r\n              payload: {\r\n                url: e.image\r\n              }\r\n            }\r\n          };\r\n        } else if (e.video) {\r\n          return {\r\n            attachment: {\r\n              type: 'video',\r\n              payload: {\r\n                url: e.video\r\n              }\r\n            }\r\n          };\r\n        }\r\n      }\r\n\r\n      throw Error('Could not form a message. Have you followed the format?');\r\n    };\r\n\r\n    const built = build();\r\n\r\n    if (this._quickreplies && this._quickreplies.length) {\r\n      built.quick_replies = this._quickreplies.toJSON();\r\n    }\r\n\r\n    return built;\r\n  }\r\n\r\n  static from(array) {\r\n    const element = new Elements();\r\n    if (Array.isArray(array)) {\r\n      array.forEach(arg => element.add(arg));\r\n    } else {\r\n      element.add(array);\r\n    }\r\n    return element;\r\n  }\r\n}\r\n\r\nexport default Elements;\r\n"]}