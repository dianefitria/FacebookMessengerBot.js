{"version":3,"sources":["../src/QuickReplies.js"],"names":["QuickReplies","quickreplies","_quickReplies","Array","isArray","forEach","add","reply","text","data","event","image","isLocation","options","Error","push","quickReplies","contentType","payload","pill","title","String","content_type","image_url","length","array","arg"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;IAEMA,Y;AACJ,wBAAYC,YAAZ,EAA0B;AAAA;;AAAA;;AACxB,SAAKC,aAAL,GAAqB,EAArB;;AAEA,QAAID,gBAAgB,IAApB,EAA0B;AACxB,UAAIE,MAAMC,OAAN,CAAcH,YAAd,CAAJ,EAAiC;AAC/BA,qBAAaI,OAAb,CAAqB;AAAA,iBAAS,MAAKC,GAAL,CAASC,KAAT,CAAT;AAAA,SAArB;AACD,OAFD,MAEO;AACL,aAAKD,GAAL,CAASL,YAAT;AACD;AACF;AACF;;;;8BAEsD;AAAA,UAAjDO,IAAiD,QAAjDA,IAAiD;AAAA,UAA3CC,IAA2C,QAA3CA,IAA2C;AAAA,UAArCC,KAAqC,QAArCA,KAAqC;AAAA,UAA9BC,KAA8B,QAA9BA,KAA8B;AAAA,UAAvBC,UAAuB,QAAvBA,UAAuB;AAAA,UAAXC,OAAW,QAAXA,OAAW;;AACrD,UAAI,CAACJ,IAAD,IAAS,CAACC,KAAV,IAAmB,CAACE,UAAxB,EAAoC;AAClC,cAAME,MAAM,qCAAN,CAAN;AACD;;AAED,WAAKZ,aAAL,CAAmBa,IAAnB,CAAwB;AACtBP,cAAMA,IADgB;AAEtBE,oBAFsB;AAGtBD,kBAHsB;AAItBE,oBAJsB;AAKtBC,8BALsB;AAMtBC;AANsB,OAAxB;AAQA,aAAO,IAAP;AACD;;;6BAEQ;AACP,UAAMG,eAAe,EAArB;AADO;AAAA;AAAA;;AAAA;AAEP,wDAAoB,KAAKd,aAAzB,4GAAwC;AAAA,cAA7BK,KAA6B;;AACtC,cAAIU,cAAc,MAAlB;AACA,cAAMC,UAAU,yBAAe,EAAET,MAAMF,MAAME,IAAd,EAAoBC,OAAOH,MAAMG,KAAjC,EAAf,CAAhB;AACA,cAAI,CAACH,MAAMC,IAAX,EAAiB;AACf,kBAAM,IAAIM,KAAJ,CAAU,mBAAV,CAAN;AACD;AACD,cAAIP,MAAMK,UAAV,EAAsB;AACpBK,0BAAc,UAAd;AACD;AACD,cAAIE,OAAO;AACTD,4BADS;AAETE,mBAAO,gBAAIC,OAAOd,MAAMC,IAAb,CAAJ,EAAwB,EAAxB,CAFE;AAGTc,0BAAcL;AAHL,WAAX;AAKA,cAAIV,MAAMI,KAAV,EAAiB;AACfQ,iBAAKI,SAAL,GAAiBhB,MAAMI,KAAvB;AACD;AACDK,uBAAaD,IAAb,CAAkBI,IAAlB;AACD;AApBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBP,aAAOH,YAAP;AACD;;;wBAQY;AACX,aAAO,KAAKd,aAAL,CAAmBsB,MAA1B;AACD;;;yBARWC,K,EAAO;AACjB,UAAMxB,eAAe,IAAID,YAAJ,EAArB;AACAyB,YAAMpB,OAAN,CAAc;AAAA,eAAOJ,aAAaK,GAAb,CAAiBoB,GAAjB,CAAP;AAAA,OAAd;AACA,aAAOzB,YAAP;AACD;;;;;kBAOYD,Y","file":"QuickReplies.js","sourcesContent":["import { cut } from \"./libs/utils\";\r\n\r\nclass QuickReplies {\r\n  constructor(quickreplies) {\r\n    this._quickReplies = [];\r\n\r\n    if (quickreplies != null) {\r\n      if (Array.isArray(quickreplies)) {\r\n        quickreplies.forEach(reply => this.add(reply));\r\n      } else {\r\n        this.add(quickreplies);\r\n      }\r\n    }\r\n  }\r\n\r\n  add({ text, data, event, image, isLocation, options }) {\r\n    if (!data && !event && !isLocation) {\r\n      throw Error(\"Must provide data i.e. {data: null}\");\r\n    }\r\n\r\n    this._quickReplies.push({\r\n      text: text,\r\n      event,\r\n      data,\r\n      image,\r\n      isLocation,\r\n      options\r\n    });\r\n    return this;\r\n  }\r\n\r\n  toJSON() {\r\n    const quickReplies = [];\r\n    for (const reply of this._quickReplies) {\r\n      let contentType = \"text\";\r\n      const payload = JSON.stringify({ data: reply.data, event: reply.event });\r\n      if (!reply.text) {\r\n        throw new Error(\"No text attribute\");\r\n      }\r\n      if (reply.isLocation) {\r\n        contentType = \"location\";\r\n      }\r\n      let pill = {\r\n        payload,\r\n        title: cut(String(reply.text), 20),\r\n        content_type: contentType\r\n      };\r\n      if (reply.image) {\r\n        pill.image_url = reply.image;\r\n      }\r\n      quickReplies.push(pill);\r\n    }\r\n\r\n    return quickReplies;\r\n  }\r\n\r\n  static from(array) {\r\n    const quickreplies = new QuickReplies();\r\n    array.forEach(arg => quickreplies.add(arg));\r\n    return quickreplies;\r\n  }\r\n\r\n  get length() {\r\n    return this._quickReplies.length;\r\n  }\r\n}\r\n\r\nexport default QuickReplies;\r\n"]}