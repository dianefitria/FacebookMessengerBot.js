{"version":3,"sources":["../src/Bot.js"],"names":["time","setTimeout","resolve","wait","Elements","Buttons","QuickReplies","userCache","Bot","token","verification","debug","_tokens","_token","_debug","_verification","json","pageId","method","query","access_token","body","result","text","updateProfile","greeting","locale","input","get_started","payload","data","setting_type","thread_state","call_to_actions","to","state","action","recipient","id","sender_action","message","err","JSON","parse","error","type","ee","Error","notification_type","tag","console","log","toJSON","fields","cache","key","props","fromCache","entry","standby","delivery","mids","emit","object","Array","isArray","changes","length","messaging","raw","sender","fetch","fetchUser","postback","e","isButton","hasOwnProperty","event","delivered","optin","param","ref","quick_reply","is_echo","isQuickReply","attachments","_","groupBy","file","files","map","a","url","image","images","video","videos","audio","location","coordinates","router","Router","use","bodyParser","get","req","res","send","post","handleStandby","handleMessage","status","EventEmitter"],"mappings":"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","file":"Bot.js","sourcesContent":["import EventEmitter from \"events\";\nimport bodyParser from \"body-parser\";\nimport { Router } from \"express\";\nimport Elements from \"./Elements.js\";\nimport Buttons from \"./Buttons.js\";\nimport QuickReplies from \"./QuickReplies.js\";\nimport fetch from \"./libs/fetch.js\";\nimport _ from \"lodash\";\n\nexport { Elements, Buttons, QuickReplies };\n\nconst userCache = {};\n\nexport async function wait(time) {\n  return new Promise(resolve => setTimeout(() => resolve(), time));\n}\n\nclass Bot extends EventEmitter {\n  static Buttons = Buttons;\n  static Elements = Elements;\n\n  static wait = wait;\n\n  constructor(token, verification, debug = false) {\n    super();\n    // support multiple tokens with backwards compatibility\n    if (typeof token === \"object\") {\n      this._tokens = token;\n    } else {\n      this._token = token;\n    }\n    this._debug = debug;\n    this._verification = verification;\n  }\n\n  async updateProfile(json, pageId) {\n    if (pageId && this._tokens) {\n      this._token = this._tokens[pageId];\n    }\n\n    const {\n      body: { result }\n    } = await fetch(\"https://graph.facebook.com/v6.0/me/messenger_profile\", {\n      method: \"post\",\n      json: true,\n      query: { access_token: this._token },\n      body: json\n    });\n\n    return result;\n  }\n\n  async setGreeting(text, pageId) {\n    // // support multiple tokens with backwards compatibility\n    // if (pageId && this._tokens) {\n    //   this._token = this._tokens[pageId];\n    // }\n\n    // const {\n    //   body: { result }\n    // } = await fetch(\"https://graph.facebook.com/v6.0/me/thread_settings\", {\n    //   method: \"post\",\n    //   json: true,\n    //   query: { access_token: this._token },\n    //   body: { setting_type: \"greeting\", greeting: { text } }\n    // });\n\n    const result = await this.updateProfile({\n      greeting: [{\n        locale: 'default',\n        text\n      }]\n    }, pageId);\n\n    return result;\n  }\n\n  async setGetStarted(input, pageId) {\n    // support multiple tokens with backwards compatibility\n    if (pageId && this._tokens) {\n      this._token = this._tokens[pageId];\n    }\n\n    const result = await this.updateProfile({\n      get_started: {\n        payload: input.data || 'GET_STARTED'\n      }\n    }, pageId);\n\n    return result;\n\n  //   if (!input) {\n  //     const {\n  //       body: { result }\n  //     } = await fetch(\"https://graph.facebook.com/v6.0/me/thread_settings\", {\n  //       method: \"delete\",\n  //       json: true,\n  //       query: { access_token: this._token },\n  //       body: {\n  //         setting_type: \"call_to_actions\",\n  //         thread_state: \"new_thread\"\n  //       }\n  //     });\n\n  //     return result;\n  //   }\n\n  //   const { data, event } = input;\n  //   const {\n  //     body: { result }\n  //   } = await fetch(\"https://graph.facebook.com/v6.0/me/thread_settings\", {\n  //     method: \"post\",\n  //     json: true,\n  //     query: { access_token: this._token },\n  //     body: {\n  //       setting_type: \"call_to_actions\",\n  //       thread_state: \"new_thread\",\n  //       call_to_actions: [{ payload: JSON.stringify({ data, event }) }]\n  //     }\n  //   });\n\n  //   return result;\n  }\n\n  async setPersistentMenu(input, pageId) {\n    // support multiple tokens with backwards compatibility\n    if (pageId && this._tokens) {\n      this._token = this._tokens[pageId];\n    }\n\n    if (!input) {\n      const {\n        body: { result }\n      } = await fetch(\"https://graph.facebook.com/v6.0/me/thread_settings\", {\n        method: \"delete\",\n        json: true,\n        query: { access_token: this._token },\n        body: {\n          setting_type: \"call_to_actions\",\n          thread_state: \"existing_thread\"\n        }\n      });\n\n      return result;\n    }\n\n    const {\n      body: { result }\n    } = await fetch(\"https://graph.facebook.com/v6.0/me/thread_settings\", {\n      method: \"post\",\n      json: true,\n      query: { access_token: this._token },\n      body: {\n        setting_type: \"call_to_actions\",\n        thread_state: \"existing_thread\",\n        call_to_actions: input\n      }\n    });\n\n    return result;\n  }\n\n  async setTyping(to, state, pageId) {\n    // support multiple tokens with backwards compatibility\n    if (pageId && this._tokens) {\n      this._token = this._tokens[pageId];\n    }\n\n    const action = state ? \"typing_on\" : \"typing_off\";\n\n    const {\n      body: { result }\n    } = await fetch(\"https://graph.facebook.com/v6.0/me/messages\", {\n      method: \"post\",\n      json: true,\n      query: { access_token: this._token },\n      body: { recipient: { id: to }, sender_action: action }\n    });\n\n    return result;\n  }\n\n  async sendPrivateMessage(id, message, pageId) {\n    try {\n      // support multiple tokens with backwards compatibility\n      if (pageId && this._tokens) {\n        this._token = this._tokens[pageId];\n      }\n      await fetch(`https://graph.facebook.com/v6.0/${id}/private_replies`, {\n        method: \"post\",\n        json: true,\n        query: { access_token: this._token },\n        body: { id, message }\n      });\n    } catch (e) {\n      if (e.text) {\n        let text = e.text;\n        try {\n          const err = JSON.parse(e.text).error;\n          text = `${err.type || \"Unknown\"}: ${err.message || \"No message\"}`;\n        } catch (ee) {\n          // ignore\n        }\n\n        throw Error(text);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async send(\n    to,\n    message,\n    notification_type = \"REGULAR\",\n    pageId,\n    tag = \"NON_PROMOTIONAL_SUBSCRIPTION\"\n  ) {\n    // support multiple tokens with backwards compatibility\n    if (pageId && this._tokens) {\n      this._token = this._tokens[pageId];\n    }\n\n    if (this._debug) {\n      console.log({\n        recipient: { id: to },\n        message: message ? message.toJSON() : message,\n        notification_type,\n        tag\n      });\n    }\n\n    try {\n      await fetch(\"https://graph.facebook.com/v6.0/me/messages\", {\n        method: \"post\",\n        json: true,\n        query: { access_token: this._token },\n        body: { recipient: { id: to }, message, notification_type, tag }\n      });\n    } catch (e) {\n      if (e.text) {\n        let text = e.text;\n        try {\n          const err = JSON.parse(e.text).error;\n          text = `${err.type || \"Unknown\"}: ${err.message || \"No message\"}`;\n        } catch (ee) {\n          // ignore\n        }\n\n        throw Error(text);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async fetchUser(\n    id,\n    fields = \"first_name,last_name,profile_pic\",\n    cache = false,\n    pageId\n  ) {\n    // support multiple tokens with backwards compatibility\n    if (pageId && this._tokens) {\n      this._token = this._tokens[pageId];\n    }\n\n    const key = id + fields;\n    let props;\n\n    if (cache && userCache[key]) {\n      props = userCache[key];\n      props.fromCache = true;\n    } else {\n      const { body } = await fetch(`https://graph.facebook.com/v6.0/${id}`, {\n        query: { access_token: this._token, fields },\n        json: true\n      });\n\n      props = body;\n      props.fromCache = false;\n\n      if (cache) {\n        userCache[key] = props;\n      }\n    }\n\n    return props;\n  }\n\n  async handleStandby(input) {\n    const body = JSON.parse(JSON.stringify(input));\n    const message = body.entry[0].standby[0];\n\n    //filter for message_delivered events\n    if (message.delivery && message.delivery.mids && message.delivery.mids[0]) {\n      this.emit(\"standby\", message);\n    }\n  }\n\n  async handleMessage(input) {\n    const body = JSON.parse(JSON.stringify(input));\n    const entry = body.entry[0];\n    if (body.object === \"page\" && Array.isArray(entry.changes) && entry.changes.length > 0) {\n      return this.emit(\"page\", entry.changes, entry.id, entry.time);\n    }\n    const message = body.entry[0].messaging[0];\n\n    Object.assign(message, message.message);\n    delete message.message;\n\n    message.raw = input;\n\n    message.sender.fetch = async (fields, cache) => {\n      const props = await this.fetchUser(\n        message.sender.id,\n        fields,\n        cache,\n        message.recipient.id\n      );\n      Object.assign(message.sender, props);\n      return message.sender;\n    };\n\n    // POSTBACK\n    if (message.postback) {\n      let postback = {};\n\n      try {\n        postback = JSON.parse(message.postback.payload) || {};\n      } catch (e) {\n        // ignore\n      }\n      message.isButton = true;\n\n      if (postback.hasOwnProperty(\"data\")) {\n        //message.postback = postback;\n        message.data = postback.data;\n        message.event = postback.event;\n\n        this.emit(\"postback\", message.event, message, message.data);\n\n        if (postback.hasOwnProperty(\"event\")) {\n          this.emit(message.event, message, message.data);\n        }\n      } else {\n        this.emit(\"invalid-postback\", message, message.postback);\n      }\n\n      return;\n    }\n\n    // DELIVERY\n    if (message.delivery) {\n      Object.assign(message, message.delivery);\n      message.delivered = message.delivery.mids;\n\n      delete message.delivery;\n\n      this.emit(\"delivery\", message, message.delivered);\n      return;\n    }\n\n    // OPTIN\n    if (message.optin) {\n      message.param = message.optin.ref || true;\n      message.optin = message.param;\n      this.emit(\"optin\", message, message.optin);\n      return;\n    }\n\n    // QUICK_REPLY\n    if (message.quick_reply && !message.is_echo) {\n      let postback = {};\n\n      try {\n        postback = JSON.parse(message.quick_reply.payload) || {};\n      } catch (e) {\n        // ignore\n      }\n\n      message.isQuickReply = true;\n\n      if (postback.hasOwnProperty(\"data\")) {\n        message.postback = postback;\n        message.data = postback.data;\n        message.event = postback.event;\n\n        this.emit(\"postback\", message.event, message, message.data);\n\n        if (postback.hasOwnProperty(\"event\")) {\n          this.emit(message.event, message, message.data);\n        }\n      } else {\n        this.emit(\"invalid-postback\", message, message.postback);\n      }\n\n      return;\n    }\n\n    const attachments = _.groupBy(message.attachments, \"type\");\n\n    if (attachments.file) {\n      message.files = attachments.file.map(a => a.payload.url);\n    }\n\n    if (attachments.image) {\n      message.images = attachments.image.map(a => a.payload.url);\n    }\n\n    if (attachments.video) {\n      message.videos = attachments.video.map(a => a.payload.url);\n    }\n\n    if (attachments.audio) {\n      message.audio = attachments.audio.map(a => a.payload.url)[0];\n    }\n\n    if (attachments.location) {\n      const location = attachments.location[0];\n      message.location = { ...location, ...location.payload.coordinates };\n      delete message.location.payload;\n    }\n\n    message.object = body.object;\n\n    delete message.attachments;\n\n    this.emit(\"message\", message);\n  }\n\n  router() {\n    const router = new Router();\n\n    router.use(bodyParser.json());\n\n    router.get(\"/\", (req, res) => {\n      if (req.query[\"hub.verify_token\"] === this._verification) {\n        res.send(req.query[\"hub.challenge\"]);\n      } else {\n        res.send(\"Error, wrong validation token\");\n      }\n    });\n\n    router.post(\"/\", (req, res) => {\n      if (req.body.entry[0].standby) {\n        this.handleStandby(req.body);\n      } else {\n        this.handleMessage(req.body);\n      }\n      res.send().status(200);\n    });\n\n    return router;\n  }\n}\n\nexport { Bot };\n\nexport default Bot;\n"]}