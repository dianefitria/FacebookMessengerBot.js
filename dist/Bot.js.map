{"version":3,"sources":["../src/Bot.js"],"names":["time","setTimeout","resolve","wait","Elements","Buttons","QuickReplies","userCache","Bot","token","verification","debug","_token","_debug","_verification","text","method","json","query","access_token","body","setting_type","greeting","result","input","thread_state","data","event","call_to_actions","payload","to","state","action","recipient","id","sender_action","message","notification_type","console","log","toJSON","err","JSON","parse","error","type","ee","Error","fields","cache","key","props","fromCache","entry","messaging","raw","sender","fetch","fetchUser","postback","e","isButton","hasOwnProperty","emit","delivery","delivered","mids","optin","param","ref","quick_reply","is_echo","isQuickReply","attachments","groupBy","image","images","map","a","url","video","videos","audio","location","coordinates","object","router","use","get","req","res","send","post","handleMessage","status"],"mappings":"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","file":"Bot.js","sourcesContent":["import EventEmitter from 'events';\r\nimport bodyParser from 'body-parser';\r\nimport {Router} from 'express';\r\nimport Elements from './Elements.js';\r\nimport Buttons from './Buttons.js';\r\nimport QuickReplies from './QuickReplies.js';\r\nimport fetch from './libs/fetch.js';\r\nimport _ from 'lodash';\r\n\r\nexport {Elements, Buttons, QuickReplies};\r\n\r\nconst userCache = {};\r\n\r\nexport async function wait(time) {\r\n  return new Promise(resolve => setTimeout(() => resolve(), time));\r\n}\r\n\r\nclass Bot extends EventEmitter {\r\n  static Buttons = Buttons;\r\n  static Elements = Elements;\r\n\r\n  static wait = wait;\r\n\r\n  constructor(token, verification, debug = false) {\r\n    super();\r\n\r\n    this._token = token;\r\n    this._debug = debug;\r\n    this._verification = verification;\r\n  }\r\n\r\n  async setGreeting(text) {\r\n    const {body: {result}} = await fetch('https://graph.facebook.com/v2.6/me/thread_settings', {\r\n      method: 'post',\r\n      json: true,\r\n      query: {access_token: this._token},\r\n      body: {setting_type: 'greeting', greeting: {text}}\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  async setGetStarted(input) {\r\n    if (!input) {\r\n      const {body: {result}} = await fetch('https://graph.facebook.com/v2.6/me/thread_settings', {\r\n        method: 'delete',\r\n        json: true,\r\n        query: {access_token: this._token},\r\n        body: {\r\n          setting_type: 'call_to_actions',\r\n          thread_state: 'new_thread'\r\n        }\r\n      });\r\n\r\n      return result;\r\n    }\r\n\r\n    const {data, event} = input;\r\n    const {body: {result}} = await fetch('https://graph.facebook.com/v2.6/me/thread_settings', {\r\n      method: 'post',\r\n      json: true,\r\n      query: {access_token: this._token},\r\n      body: {\r\n        setting_type: 'call_to_actions',\r\n        thread_state: 'new_thread',\r\n        call_to_actions: [{payload: JSON.stringify({data, event})}]\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  async setPersistentMenu(input) {\r\n    if (!input) {\r\n      const {body: {result}} = await fetch('https://graph.facebook.com/v2.6/me/thread_settings', {\r\n        method: 'delete',\r\n        json: true,\r\n        query: {access_token: this._token},\r\n        body: {\r\n          setting_type: 'call_to_actions',\r\n          thread_state: 'existing_thread'\r\n        }\r\n      });\r\n\r\n      return result;\r\n    }\r\n\r\n    const {body: {result}} = await fetch('https://graph.facebook.com/v2.6/me/thread_settings', {\r\n      method: 'post',\r\n      json: true,\r\n      query: {access_token: this._token},\r\n      body: {\r\n        setting_type: 'call_to_actions',\r\n        thread_state: 'existing_thread',\r\n        call_to_actions: input\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  async setTyping(to, state) {\r\n    const action = state ? 'typing_on' : 'typing_off';\r\n    \r\n    const {body: {result}} = await fetch('https://graph.facebook.com/v2.6/me/messages', {\r\n      method: 'post',\r\n      json: true,\r\n      query: {access_token: this._token},\r\n      body: {recipient: {id: to}, sender_action: action}\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n  async send(to, message, notification_type) {\r\n    if (this._debug) {\r\n      console.log({recipient: {id: to}, message: message ? message.toJSON() : message, notification_type});\r\n    }\r\n\r\n    try {\r\n      await fetch('https://graph.facebook.com/v2.6/me/messages', {\r\n        method: 'post',\r\n        json: true,\r\n        query: {access_token: this._token},\r\n        body: {recipient: {id: to}, message, notification_type}\r\n      });\r\n    } catch (e) {\r\n      if (e.text) {\r\n        let text = e.text;\r\n        try {\r\n          const err = JSON.parse(e.text).error;\r\n          text = `${err.type || 'Unknown'}: ${err.message || 'No message'}`;\r\n        } catch (ee) {\r\n          // ignore\r\n        }\r\n\r\n        throw Error(text);\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  async fetchUser(id, fields = 'first_name,last_name,profile_pic', cache = false) {\r\n    const key = id + fields;\r\n    let props;\r\n\r\n    if (cache && userCache[key]) {\r\n      props = userCache[key];\r\n      props.fromCache = true;\r\n    } else {\r\n      const {body} = await fetch(`https://graph.facebook.com/v2.6/${id}`, {\r\n        query: {access_token: this._token, fields}, json: true\r\n      });\r\n\r\n      props = body;\r\n      props.fromCache = false;\r\n\r\n      if (cache) {\r\n        userCache[key] = props;\r\n      }\r\n    }\r\n\r\n    return props;\r\n  }\r\n\r\n  async handleMessage(input) {\r\n    const body = JSON.parse(JSON.stringify(input));\r\n    const message = body.entry[0].messaging[0];\r\n    Object.assign(message, message.message);\r\n    delete message.message;\r\n\r\n    message.raw = input;\r\n\r\n    message.sender.fetch = async(fields, cache) => {\r\n      const props = await this.fetchUser(message.sender.id, fields, cache);\r\n      Object.assign(message.sender, props);\r\n      return message.sender;\r\n    };\r\n\r\n    // POSTBACK\r\n    if (message.postback) {\r\n      let postback = {};\r\n\r\n      try {\r\n        postback = JSON.parse(message.postback.payload);\r\n      } catch (e) {\r\n        // ignore\r\n      }\r\n      message.isButton = true;\r\n\r\n      if (postback.hasOwnProperty('data')) {\r\n        message.postback = postback;\r\n        message.data = postback.data;\r\n        message.event = postback.event;\r\n\r\n        this.emit('postback', message.event, message, message.data);\r\n\r\n        if (postback.hasOwnProperty('event')) {\r\n          this.emit(message.event, message, message.data);\r\n        }\r\n      } else {\r\n        this.emit('invalid-postback', message, message.postback);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // DELIVERY\r\n    if (message.delivery) {\r\n      Object.assign(message, message.delivery);\r\n      message.delivered = message.delivery.mids;\r\n\r\n      delete message.delivery;\r\n\r\n      this.emit('delivery', message, message.delivered);\r\n      return;\r\n    }\r\n\r\n    // OPTIN\r\n    if (message.optin) {\r\n      message.param = message.optin.ref || true;\r\n      message.optin = message.param;\r\n      this.emit('optin', message, message.optin);\r\n      return;\r\n    }\r\n\r\n    // QUICK_REPLY\r\n    if (message.quick_reply && !message.is_echo) {\r\n      let postback = {};\r\n\r\n      try {\r\n        postback = JSON.parse(message.quick_reply.payload);\r\n      } catch (e) {\r\n        // ignore\r\n      }\r\n\r\n      message.isQuickReply = true;\r\n\r\n      if (postback.hasOwnProperty('data')) {\r\n        message.postback = postback;\r\n        message.data = postback.data;\r\n        message.event = postback.event;\r\n\r\n        this.emit('postback', message.event, message, message.data);\r\n\r\n        if (postback.hasOwnProperty('event')) {\r\n          this.emit(message.event, message, message.data);\r\n        }\r\n      } else {\r\n        this.emit('invalid-postback', message, message.postback);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const attachments = _.groupBy(message.attachments, 'type');\r\n\r\n    if (attachments.image) {\r\n      message.images = attachments.image.map(a => a.payload.url);\r\n    }\r\n\r\n    if (attachments.video) {\r\n      message.videos = attachments.video.map(a => a.payload.url);\r\n    }\r\n\r\n    if (attachments.audio) {\r\n      message.audio = attachments.audio.map(a => a.payload.url)[0];\r\n    }\r\n\r\n    if (attachments.location) {\r\n      const location = attachments.location[0];\r\n      message.location = {...location, ...location.payload.coordinates};\r\n      delete message.location.payload;\r\n    }\r\n\r\n    message.object = body.object;\r\n\r\n    delete message.attachments;\r\n\r\n    this.emit('message', message);\r\n  }\r\n\r\n  router() {\r\n    const router = new Router();\r\n\r\n    router.use(bodyParser.json());\r\n\r\n    router.get('/', (req, res) => {\r\n      if (req.query['hub.verify_token'] === this._verification) {\r\n        res.send(req.query['hub.challenge']);\r\n      } else {\r\n        res.send('Error, wrong validation token');\r\n      }\r\n    });\r\n\r\n    router.post('/', (req, res) => {\r\n      this.handleMessage(req.body);\r\n      res.send().status(200);\r\n    });\r\n\r\n    return router;\r\n  }\r\n}\r\n\r\nexport {Bot};\r\n\r\nexport default Bot;\r\n"]}