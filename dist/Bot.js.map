{"version":3,"sources":["../src/Bot.js"],"names":["time","setTimeout","resolve","wait","Elements","Buttons","QuickReplies","userCache","Bot","token","verification","debug","_tokens","_token","_debug","_verification","text","pageId","method","json","query","access_token","body","setting_type","greeting","result","input","thread_state","data","event","call_to_actions","payload","to","state","action","recipient","id","sender_action","message","notification_type","console","log","toJSON","err","JSON","parse","error","type","ee","Error","fields","cache","key","props","fromCache","entry","standby","delivery","mids","emit","messaging","raw","sender","fetch","fetchUser","postback","e","isButton","hasOwnProperty","delivered","optin","param","ref","quick_reply","is_echo","isQuickReply","attachments","groupBy","image","images","map","a","url","video","videos","audio","location","coordinates","object","router","use","get","req","res","send","post","handleStandby","handleMessage","status"],"mappings":"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","file":"Bot.js","sourcesContent":["import EventEmitter from \"events\";\r\nimport bodyParser from \"body-parser\";\r\nimport { Router } from \"express\";\r\nimport Elements from \"./Elements.js\";\r\nimport Buttons from \"./Buttons.js\";\r\nimport QuickReplies from \"./QuickReplies.js\";\r\nimport fetch from \"./libs/fetch.js\";\r\nimport _ from \"lodash\";\r\n\r\nexport { Elements, Buttons, QuickReplies };\r\n\r\nconst userCache = {};\r\n\r\nexport async function wait(time) {\r\n  return new Promise(resolve => setTimeout(() => resolve(), time));\r\n}\r\n\r\nclass Bot extends EventEmitter {\r\n  static Buttons = Buttons;\r\n  static Elements = Elements;\r\n\r\n  static wait = wait;\r\n\r\n  constructor(token, verification, debug = false) {\r\n    super();\r\n    // support multiple tokens with backwards compatibility\r\n    if (typeof token === \"object\") {\r\n      this._tokens = token;\r\n    } else {\r\n      this._token = token;\r\n    }\r\n    this._debug = debug;\r\n    this._verification = verification;\r\n  }\r\n\r\n  async setGreeting(text, pageId) {\r\n    // support multiple tokens with backwards compatibility\r\n    if (pageId && this._tokens) {\r\n      this._token = this._tokens[pageId];\r\n    }\r\n\r\n    const { body: { result } } = await fetch(\r\n      \"https://graph.facebook.com/v2.6/me/thread_settings\",\r\n      {\r\n        method: \"post\",\r\n        json: true,\r\n        query: { access_token: this._token },\r\n        body: { setting_type: \"greeting\", greeting: { text } }\r\n      }\r\n    );\r\n\r\n    return result;\r\n  }\r\n\r\n  async setGetStarted(input, pageId) {\r\n    // support multiple tokens with backwards compatibility\r\n    if (pageId && this._tokens) {\r\n      this._token = this._tokens[pageId];\r\n    }\r\n\r\n    if (!input) {\r\n      const { body: { result } } = await fetch(\r\n        \"https://graph.facebook.com/v2.6/me/thread_settings\",\r\n        {\r\n          method: \"delete\",\r\n          json: true,\r\n          query: { access_token: this._token },\r\n          body: {\r\n            setting_type: \"call_to_actions\",\r\n            thread_state: \"new_thread\"\r\n          }\r\n        }\r\n      );\r\n\r\n      return result;\r\n    }\r\n\r\n    const { data, event } = input;\r\n    const { body: { result } } = await fetch(\r\n      \"https://graph.facebook.com/v2.6/me/thread_settings\",\r\n      {\r\n        method: \"post\",\r\n        json: true,\r\n        query: { access_token: this._token },\r\n        body: {\r\n          setting_type: \"call_to_actions\",\r\n          thread_state: \"new_thread\",\r\n          call_to_actions: [{ payload: JSON.stringify({ data, event }) }]\r\n        }\r\n      }\r\n    );\r\n\r\n    return result;\r\n  }\r\n\r\n  async setPersistentMenu(input, pageId) {\r\n    // support multiple tokens with backwards compatibility\r\n    if (pageId && this._tokens) {\r\n      this._token = this._tokens[pageId];\r\n    }\r\n\r\n    if (!input) {\r\n      const { body: { result } } = await fetch(\r\n        \"https://graph.facebook.com/v2.6/me/thread_settings\",\r\n        {\r\n          method: \"delete\",\r\n          json: true,\r\n          query: { access_token: this._token },\r\n          body: {\r\n            setting_type: \"call_to_actions\",\r\n            thread_state: \"existing_thread\"\r\n          }\r\n        }\r\n      );\r\n\r\n      return result;\r\n    }\r\n\r\n    const { body: { result } } = await fetch(\r\n      \"https://graph.facebook.com/v2.6/me/thread_settings\",\r\n      {\r\n        method: \"post\",\r\n        json: true,\r\n        query: { access_token: this._token },\r\n        body: {\r\n          setting_type: \"call_to_actions\",\r\n          thread_state: \"existing_thread\",\r\n          call_to_actions: input\r\n        }\r\n      }\r\n    );\r\n\r\n    return result;\r\n  }\r\n\r\n  async setTyping(to, state, pageId) {\r\n    // support multiple tokens with backwards compatibility\r\n    if (pageId && this._tokens) {\r\n      this._token = this._tokens[pageId];\r\n    }\r\n\r\n    const action = state ? \"typing_on\" : \"typing_off\";\r\n\r\n    const { body: { result } } = await fetch(\r\n      \"https://graph.facebook.com/v2.6/me/messages\",\r\n      {\r\n        method: \"post\",\r\n        json: true,\r\n        query: { access_token: this._token },\r\n        body: { recipient: { id: to }, sender_action: action }\r\n      }\r\n    );\r\n\r\n    return result;\r\n  }\r\n\r\n  async send(to, message, notification_type = \"REGULAR\", pageId) {\r\n    // support multiple tokens with backwards compatibility\r\n    if (pageId && this._tokens) {\r\n      this._token = this._tokens[pageId];\r\n    }\r\n\r\n    if (this._debug) {\r\n      console.log({\r\n        recipient: { id: to },\r\n        message: message ? message.toJSON() : message,\r\n        notification_type\r\n      });\r\n    }\r\n\r\n    try {\r\n      await fetch(\"https://graph.facebook.com/v2.6/me/messages\", {\r\n        method: \"post\",\r\n        json: true,\r\n        query: { access_token: this._token },\r\n        body: { recipient: { id: to }, message, notification_type }\r\n      });\r\n    } catch (e) {\r\n      if (e.text) {\r\n        let text = e.text;\r\n        try {\r\n          const err = JSON.parse(e.text).error;\r\n          text = `${err.type || \"Unknown\"}: ${err.message || \"No message\"}`;\r\n        } catch (ee) {\r\n          // ignore\r\n        }\r\n\r\n        throw Error(text);\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  async fetchUser(\r\n    id,\r\n    fields = \"first_name,last_name,profile_pic\",\r\n    cache = false,\r\n    pageId\r\n  ) {\r\n    // support multiple tokens with backwards compatibility\r\n    if (pageId && this._tokens) {\r\n      this._token = this._tokens[pageId];\r\n    }\r\n\r\n    const key = id + fields;\r\n    let props;\r\n\r\n    if (cache && userCache[key]) {\r\n      props = userCache[key];\r\n      props.fromCache = true;\r\n    } else {\r\n      const { body } = await fetch(`https://graph.facebook.com/v2.6/${id}`, {\r\n        query: { access_token: this._token, fields },\r\n        json: true\r\n      });\r\n\r\n      props = body;\r\n      props.fromCache = false;\r\n\r\n      if (cache) {\r\n        userCache[key] = props;\r\n      }\r\n    }\r\n\r\n    return props;\r\n  }\r\n\r\n  async handleStandby(input) {\r\n    const body = JSON.parse(JSON.stringify(input));\r\n    const message = body.entry[0].standby[0];\r\n\r\n    //filter for message_delivered events\r\n    if (message.delivery && message.delivery.mids && message.delivery.mids[0]) {\r\n      this.emit(\"standby\", message);\r\n    }\r\n  }\r\n\r\n  async handleMessage(input) {\r\n    const body = JSON.parse(JSON.stringify(input));\r\n    const message = body.entry[0].messaging[0];\r\n    Object.assign(message, message.message);\r\n    delete message.message;\r\n\r\n    message.raw = input;\r\n\r\n    message.sender.fetch = async (fields, cache) => {\r\n      const props = await this.fetchUser(\r\n        message.sender.id,\r\n        fields,\r\n        cache,\r\n        message.recipient.id\r\n      );\r\n      Object.assign(message.sender, props);\r\n      return message.sender;\r\n    };\r\n\r\n    // POSTBACK\r\n    if (message.postback) {\r\n      let postback = {};\r\n\r\n      try {\r\n        postback = JSON.parse(message.postback.payload) || {};\r\n      } catch (e) {\r\n        // ignore\r\n      }\r\n      message.isButton = true;\r\n\r\n      if (postback.hasOwnProperty(\"data\")) {\r\n        //message.postback = postback;\r\n        message.data = postback.data;\r\n        message.event = postback.event;\r\n\r\n        this.emit(\"postback\", message.event, message, message.data);\r\n\r\n        if (postback.hasOwnProperty(\"event\")) {\r\n          this.emit(message.event, message, message.data);\r\n        }\r\n      } else {\r\n        this.emit(\"invalid-postback\", message, message.postback);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // DELIVERY\r\n    if (message.delivery) {\r\n      Object.assign(message, message.delivery);\r\n      message.delivered = message.delivery.mids;\r\n\r\n      delete message.delivery;\r\n\r\n      this.emit(\"delivery\", message, message.delivered);\r\n      return;\r\n    }\r\n\r\n    // OPTIN\r\n    if (message.optin) {\r\n      message.param = message.optin.ref || true;\r\n      message.optin = message.param;\r\n      this.emit(\"optin\", message, message.optin);\r\n      return;\r\n    }\r\n\r\n    // QUICK_REPLY\r\n    if (message.quick_reply && !message.is_echo) {\r\n      let postback = {};\r\n\r\n      try {\r\n        postback = JSON.parse(message.quick_reply.payload) || {};\r\n      } catch (e) {\r\n        // ignore\r\n      }\r\n\r\n      message.isQuickReply = true;\r\n\r\n      if (postback.hasOwnProperty(\"data\")) {\r\n        message.postback = postback;\r\n        message.data = postback.data;\r\n        message.event = postback.event;\r\n\r\n        this.emit(\"postback\", message.event, message, message.data);\r\n\r\n        if (postback.hasOwnProperty(\"event\")) {\r\n          this.emit(message.event, message, message.data);\r\n        }\r\n      } else {\r\n        this.emit(\"invalid-postback\", message, message.postback);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const attachments = _.groupBy(message.attachments, \"type\");\r\n\r\n    if (attachments.image) {\r\n      message.images = attachments.image.map(a => a.payload.url);\r\n    }\r\n\r\n    if (attachments.video) {\r\n      message.videos = attachments.video.map(a => a.payload.url);\r\n    }\r\n\r\n    if (attachments.audio) {\r\n      message.audio = attachments.audio.map(a => a.payload.url)[0];\r\n    }\r\n\r\n    if (attachments.location) {\r\n      const location = attachments.location[0];\r\n      message.location = { ...location, ...location.payload.coordinates };\r\n      delete message.location.payload;\r\n    }\r\n\r\n    message.object = body.object;\r\n\r\n    delete message.attachments;\r\n\r\n    this.emit(\"message\", message);\r\n  }\r\n\r\n  router() {\r\n    const router = new Router();\r\n\r\n    router.use(bodyParser.json());\r\n\r\n    router.get(\"/\", (req, res) => {\r\n      if (req.query[\"hub.verify_token\"] === this._verification) {\r\n        res.send(req.query[\"hub.challenge\"]);\r\n      } else {\r\n        res.send(\"Error, wrong validation token\");\r\n      }\r\n    });\r\n\r\n    router.post(\"/\", (req, res) => {\r\n      if (req.body.entry[0].standby) {\r\n        this.handleStandby(req.body);\r\n      } else {\r\n        this.handleMessage(req.body);\r\n      }\r\n      res.send().status(200);\r\n    });\r\n\r\n    return router;\r\n  }\r\n}\r\n\r\nexport { Bot };\r\n\r\nexport default Bot;\r\n"]}