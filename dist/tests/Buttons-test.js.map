{"version":3,"sources":["../../src/tests/Buttons-test.js"],"names":["describe","it","buttons","Buttons","add","text","url","phone","share","assert","deepEqual","type","title","payload","toJSON","fail","e","ok","from","data","event"],"mappings":";;AAAA;;;;AACA;;;;AAEAA,SAAS,SAAT,EAAoB,YAAM;AACxBC,KAAG,SAAH,EAAc,YAAM;AAClB,QAAMC,UAAU,IAAIC,SAAJ,EAAhB;AACAD,YAAQE,GAAR,CAAY,EAAEC,MAAM,QAAR,EAAkBC,KAAK,mBAAvB,EAAZ;AACAJ,YAAQE,GAAR,CAAY,EAAEC,MAAM,SAAR,EAAmBE,OAAO,eAA1B,EAAZ;AACAL,YAAQE,GAAR,CAAY,EAAEI,OAAO,IAAT,EAAZ;;AAEAC,qBAAOC,SAAP,CACE,CACE,EAAEC,MAAM,SAAR,EAAmBL,KAAK,mBAAxB,EAA6CM,OAAO,QAApD,EADF,EAEE,EAAED,MAAM,cAAR,EAAwBC,OAAO,SAA/B,EAA0CC,SAAS,eAAnD,EAFF,EAGE,EAAEF,MAAM,eAAR,EAHF,CADF,EAMET,QAAQY,MAAR,EANF;AAQD,GAdD;;AAgBAb,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAMC,UAAU,IAAIC,SAAJ,EAAhB;AACAD,cAAQE,GAAR,CAAY,EAAZ;AACAK,uBAAOM,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACVP,uBAAOQ,EAAP,CAAU,mCAAV;AACD;AACF,GARD;;AAUAhB,KAAG,qBAAH,EAA0B,YAAM;AAC9B,QAAI;AACFE,gBAAQe,IAAR,CAAa,CAAC,EAAEC,MAAM,EAAR,EAAYd,MAAM,KAAlB,EAAD,EAA4B,EAAEc,MAAM,EAAR,EAAYd,MAAM,KAAlB,EAA5B,CAAb;AACAI,uBAAOQ,EAAP,CAAU,kBAAV;AACD,KAHD,CAGE,OAAOD,CAAP,EAAU;AACVP,uBAAOM,IAAP,CAAY,6BAAZ;AACD;AACF,GAPD;;AASAd,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAMC,UAAU,IAAIC,SAAJ,EAAhB;AACAD,cAAQE,GAAR,CAAY,EAAEgB,OAAO,cAAT,EAAZ;AACAX,uBAAOM,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACVP,uBAAOQ,EAAP,CAAU,mCAAV;AACD;AACF,GARD;AASD,CA7CD","file":"Buttons-test.js","sourcesContent":["import assert from \"assert\";\nimport { Buttons } from \"../..\";\n\ndescribe(\"Buttons\", () => {\n  it(\"#toJSON\", () => {\n    const buttons = new Buttons();\n    buttons.add({ text: \"Google\", url: \"http://google.com\" });\n    buttons.add({ text: \"Call us\", phone: \"+808 63718243\" });\n    buttons.add({ share: true });\n\n    assert.deepEqual(\n      [\n        { type: \"web_url\", url: \"http://google.com\", title: \"Google\" },\n        { type: \"phone_number\", title: \"Call us\", payload: \"+808 63718243\" },\n        { type: \"element_share\" }\n      ],\n      buttons.toJSON()\n    );\n  });\n\n  it(\"should throw an error\", () => {\n    try {\n      const buttons = new Buttons();\n      buttons.add({});\n      assert.fail(\"should have thrown an error\");\n    } catch (e) {\n      assert.ok(\"does not have data/url attributes\");\n    }\n  });\n\n  it(\"should parse object\", () => {\n    try {\n      Buttons.from([{ data: [], text: \"sup\" }, { data: [], text: \"cat\" }]);\n      assert.ok(\"parsed correctly\");\n    } catch (e) {\n      assert.fail(\"should have thrown an error\");\n    }\n  });\n\n  it(\"should throw an error\", () => {\n    try {\n      const buttons = new Buttons();\n      buttons.add({ event: \"simple-event\" });\n      assert.fail(\"should have thrown an error\");\n    } catch (e) {\n      assert.ok(\"does not have data/url attributes\");\n    }\n  });\n});\n"]}