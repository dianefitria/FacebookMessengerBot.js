{"version":3,"sources":["../../src/tests/QuickReplies-test.js"],"names":["describe","it","quickReplies","add","text","data","isLocation","image","deepEqual","payload","title","content_type","image_url","toJSON","fail","e","ok","event"],"mappings":";;AAAA;;;;AACA;;;;AAEAA,SAAS,cAAT,EAAyB,YAAM;AAC7BC,KAAG,SAAH,EAAc,YAAM;AAClB,QAAMC,eAAe,oBAArB;AACAA,iBAAaC,GAAb,CAAiB,EAAEC,MAAM,QAAR,EAAkBC,MAAM,mBAAxB,EAAjB;AACAH,iBAAaC,GAAb,CAAiB,EAAEC,MAAM,SAAR,EAAmBE,YAAY,IAA/B,EAAjB;AACAJ,iBAAaC,GAAb,CAAiB;AACfC,YAAM,WADS;AAEfC,YAAM,iBAFS;AAGfE,aACE;AAJa,KAAjB;;AAOA,qBAAOC,SAAP,CACE,CACE;AACEC,eAAS,8BADX;AAEEC,aAAO,QAFT;AAGEC,oBAAc;AAHhB,KADF,EAME;AACEF,eAAS,IADX;AAEEC,aAAO,SAFT;AAGEC,oBAAc;AAHhB,KANF,EAWE;AACEF,eAAS,4BADX;AAEEG,iBACE,wFAHJ;AAIEF,aAAO,WAJT;AAKEC,oBAAc;AALhB,KAXF,CADF,EAoBET,aAAaW,MAAb,EApBF;AAsBD,GAjCD;;AAmCAZ,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAMC,eAAe,oBAArB;AACAA,mBAAaC,GAAb,CAAiB,EAAjB;AACA,uBAAOW,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,uBAAOC,EAAP,CAAU,mCAAV;AACD;AACF,GARD;;AAUAf,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAI;AACF,UAAMC,eAAe,oBAArB;AACAA,mBAAaC,GAAb,CAAiB,EAAEc,OAAO,cAAT,EAAjB;AACA,uBAAOH,IAAP,CAAY,6BAAZ;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,uBAAOC,EAAP,CAAU,mCAAV;AACD;AACF,GARD;AASD,CAvDD","file":"QuickReplies-test.js","sourcesContent":["import assert from \"assert\";\nimport { QuickReplies } from \"../..\";\n\ndescribe(\"QuickReplies\", () => {\n  it(\"#toJSON\", () => {\n    const quickReplies = new QuickReplies();\n    quickReplies.add({ text: \"Google\", data: \"http://google.com\" });\n    quickReplies.add({ text: \"Address\", isLocation: true });\n    quickReplies.add({\n      text: \"Microsoft\",\n      data: \"http://bing.com\",\n      image:\n        \"http://emojipedia-us.s3.amazonaws.com/cache/67/4c/674c07586a355f19682722ac443c77b7.png\"\n    });\n\n    assert.deepEqual(\n      [\n        {\n          payload: '{\"data\":\"http://google.com\"}',\n          title: \"Google\",\n          content_type: \"text\"\n        },\n        {\n          payload: \"{}\",\n          title: \"Address\",\n          content_type: \"location\"\n        },\n        {\n          payload: '{\"data\":\"http://bing.com\"}',\n          image_url:\n            \"http://emojipedia-us.s3.amazonaws.com/cache/67/4c/674c07586a355f19682722ac443c77b7.png\",\n          title: \"Microsoft\",\n          content_type: \"text\"\n        }\n      ],\n      quickReplies.toJSON()\n    );\n  });\n\n  it(\"should throw an error\", () => {\n    try {\n      const quickReplies = new QuickReplies();\n      quickReplies.add({});\n      assert.fail(\"should have thrown an error\");\n    } catch (e) {\n      assert.ok(\"does not have data/url attributes\");\n    }\n  });\n\n  it(\"should throw an error\", () => {\n    try {\n      const quickReplies = new QuickReplies();\n      quickReplies.add({ event: \"simple-event\" });\n      assert.fail(\"should have thrown an error\");\n    } catch (e) {\n      assert.ok(\"does not have data/url attributes\");\n    }\n  });\n});\n"]}