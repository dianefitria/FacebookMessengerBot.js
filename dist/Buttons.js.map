{"version":3,"sources":["../src/Buttons.js"],"names":["Buttons","buttons","_buttons","Array","isArray","forEach","add","button","data","url","event","phone","share","console","error","text","push","account_linking","linking","type","Error","title","messenger_extensions","webview_height_ratio","webview_share_button","payload","options","length","array","arg"],"mappings":"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","file":"Buttons.js","sourcesContent":["class Buttons {\n  constructor(buttons) {\n    this._buttons = [];\n\n    if (buttons != null) {\n      if (Array.isArray(buttons)) {\n        buttons.forEach(button => this.add(button));\n      } else {\n        this.add(buttons);\n      }\n    }\n  }\n\n  add(button) {\n    if (!button.data && !button.url && !button.event && !button.phone && !button.share) {\n      console.error(\"Must provide a url or data i.e. {data: null} or {url: 'https://facebook.com'}\");\n      return;\n    }\n    const _buttons = Object.assign({\n      text: button.text || \"Button\"\n    }, button)\n\n    this._buttons.push(_buttons);\n    return this;\n  }\n\n  toJSON() {\n    const buttons = [];\n    for (const button of this._buttons) {\n      if (button.account_linking) {\n        if (!button.account_linking.linking) {\n          buttons.push({ type: \"account_unlink\" });\n        } else if (button.url) {\n          buttons.push({ type: \"account_link\", url: button.url });\n        } else {\n          throw Error(\"Missing url for account linking\");\n        }\n      } else if (button.url) {\n        buttons.push({\n          type: \"web_url\",\n          url: button.url,\n          title: button.text,\n          messenger_extensions: button.messenger_extensions,\n          webview_height_ratio: button.webview_height_ratio || \"full\",\n          webview_share_button: button.webview_share_button\n        });\n      } else if (button.data != null) {\n        const payload = JSON.stringify({\n          data: button.data,\n          event: button.event\n        });\n        buttons.push({\n          type: \"postback\",\n          payload,\n          title: button.text,\n          options: button.options\n        });\n      } else if (button.share) {\n        buttons.push({ type: \"element_share\" });\n      } else if (button.phone) {\n        buttons.push({\n          type: \"phone_number\",\n          payload: button.phone,\n          title: button.text\n        });\n      }\n    }\n\n    return buttons;\n  }\n\n  static from(array) {\n    const buttons = new Buttons();\n    array.forEach(arg => buttons.add(arg));\n    return buttons;\n  }\n\n  get length() {\n    return this._buttons.length;\n  }\n}\n\nexport default Buttons;\n"]}