{"version":3,"sources":["../src/Buttons.js"],"names":["Buttons","buttons","_buttons","Array","isArray","forEach","add","button","text","data","url","phone","event","share","account_linking","webview_height_ratio","messenger_extensions","Error","push","linking","type","title","payload","length","array","arg"],"mappings":"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","file":"Buttons.js","sourcesContent":["class Buttons {\n  constructor(buttons) {\n    this._buttons = [];\n    \n    if (buttons != null) {\n      if (Array.isArray(buttons)) {\n        buttons.forEach(button => this.add(button));\n      } else {\n        this.add(buttons);\n      }\n    }\n  }\n\n  add({\n      text,\n      data,\n      url,\n      phone,\n      event,\n      share,\n      account_linking,\n      webview_height_ratio,\n      messenger_extensions\n    }) {\n    if (!data && !url && !event && !phone && !share) {\n      throw Error('Must provide a url or data i.e. {data: null} or {url: \\'https://facebook.com\\'}');\n    }\n\n    this._buttons.push({\n      text: text || 'Button',\n      event,\n      data,\n      phone,\n      share,\n      url,\n      account_linking,\n      webview_height_ratio,\n      messenger_extensions\n    });\n    return this;\n  }\n\n  toJSON() {\n    const buttons = [];\n    for (const button of this._buttons) {\n      if (button.account_linking) {\n        if (!button.account_linking.linking) {\n          buttons.push({type: 'account_unlink'});\n        } else if (button.url) {\n          buttons.push({type: 'account_link', url: button.url});\n        } else {\n          throw Error('Missing url for account linking');\n        }\n      } else if (button.url) {\n        buttons.push({\n          type: 'web_url',\n          url: button.url,\n          title: button.text,\n          messenger_extensions: button.messenger_extensions,\n          webview_height_ratio: button.webview_height_ratio || 'full'\n        });\n      } else if (button.data != null) {\n        const payload = JSON.stringify({data: button.data, event: button.event});\n        buttons.push({type: 'postback', payload, title: button.text});\n      } else if (button.share) {\n        buttons.push({type: 'element_share'});\n      } else if (button.phone) {\n        buttons.push({type: 'phone_number', payload: button.phone, title: button.text});\n      }\n    }\n\n    return buttons;\n  }\n\n  static from(array) {\n    const buttons = new Buttons();\n    array.forEach(arg => buttons.add(arg));\n    return buttons;\n  }\n\n  get length() {\n    return this._buttons.length;\n  }\n}\n\nexport default Buttons;\n"]}