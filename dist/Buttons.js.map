{"version":3,"sources":["../src/Buttons.js"],"names":["Buttons","buttons","_buttons","Array","isArray","forEach","add","button","text","data","url","phone","event","share","account_linking","webview_height_ratio","Error","push","linking","type","title","payload","length","array","arg"],"mappings":"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","file":"Buttons.js","sourcesContent":["class Buttons {\n  constructor(buttons) {\n    this._buttons = [];\n    \n    if (buttons != null) {\n      if (Array.isArray(buttons)) {\n        buttons.forEach(button => this.add(button));\n      } else {\n        this.add(buttons);\n      }\n    }\n  }\n\n  add({text, data, url, phone, event, share, account_linking, webview_height_ratio}) {\n    if (!data && !url && !event && !phone && !share) {\n      throw Error('Must provide a url or data i.e. {data: null} or {url: \\'https://facebook.com\\'}');\n    }\n\n    this._buttons.push({text: text || 'Button', event, data, phone, share, url, account_linking, webview_height_ratio});\n    return this;\n  }\n\n  toJSON() {\n    const buttons = [];\n    for (const button of this._buttons) {\n      if (button.account_linking) {\n        if (!button.account_linking.linking) {\n          buttons.push({type: 'account_unlink'});\n        } else if (button.url) {\n          buttons.push({type: 'account_link', url: button.url});\n        } else {\n          throw Error('Missing url for account linking');\n        }\n      } else if (button.url) {\n        buttons.push({type: 'web_url', url: button.url, title: button.text, webview_height_ratio: button.webview_height_ratio || 'full'});\n      } else if (button.data != null) {\n        const payload = JSON.stringify({data: button.data, event: button.event});\n        buttons.push({type: 'postback', payload, title: button.text});\n      } else if (button.share) {\n        buttons.push({type: 'element_share'});\n      } else if (button.phone) {\n        buttons.push({type: 'phone_number', payload: button.phone, title: button.text});\n      }\n    }\n\n    return buttons;\n  }\n\n  static from(array) {\n    const buttons = new Buttons();\n    array.forEach(arg => buttons.add(arg));\n    return buttons;\n  }\n\n  get length() {\n    return this._buttons.length;\n  }\n}\n\nexport default Buttons;\n"]}